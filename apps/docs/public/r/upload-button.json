{
  "name": "upload-button",
  "type": "registry:ui",
  "dependencies": [
    "better-upload",
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "upload-button.tsx",
      "content": "import { Button } from '@/components/ui/button';\r\nimport { useUploadFile } from 'better-upload/client';\r\nimport { Loader2, Upload } from 'lucide-react';\r\nimport { useId, useRef } from 'react';\r\n\r\ntype UploadButtonProps = Parameters<typeof useUploadFile>[0] & {\r\n  accept?: string;\r\n  metadata?: Record<string, unknown>;\r\n\r\n  // Add any additional props you need.\r\n};\r\n\r\nexport function UploadButton({\r\n  accept,\r\n  metadata,\r\n  ...params\r\n}: UploadButtonProps) {\r\n  const id = useId();\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const { upload, isPending } = useUploadFile({\r\n    ...params,\r\n    onUploadSettled: () => {\r\n      if (inputRef.current) {\r\n        inputRef.current.value = '';\r\n      }\r\n\r\n      params.onUploadSettled?.();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Button disabled={isPending} className=\"relative\" type=\"button\">\r\n      <label htmlFor={id} className=\"absolute inset-0 cursor-pointer\">\r\n        <input\r\n          id={id}\r\n          ref={inputRef}\r\n          className=\"absolute inset-0 size-0 opacity-0\"\r\n          type=\"file\"\r\n          accept={accept}\r\n          onChange={(e) => {\r\n            if (e.target.files?.[0]) {\r\n              upload(e.target.files[0], { metadata });\r\n            }\r\n          }}\r\n        />\r\n      </label>\r\n      {isPending ? (\r\n        <>\r\n          <Loader2 className=\"size-4 animate-spin\" />\r\n          Upload file\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Upload className=\"size-4\" />\r\n          Upload file\r\n        </>\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}